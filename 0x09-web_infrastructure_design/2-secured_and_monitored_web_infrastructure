# Whiteboard Design – Secured & Monitored Three-Server Web Infrastructure
![Alt text](2-secured_and_monitored_web_infrastructure.png "One Server Web Infrastructure")
## Step-by-step request flow

1. **User opens** `https://www.foobar.com` in their browser.
2. **DNS resolution** returns the IP address of the **Load Balancer**.
3. Traffic first passes through **Firewall #1** (perimeter firewall).
4. **Load Balancer (HAProxy)** receives HTTPS requests.
   - **SSL Certificate** is installed here to encrypt traffic between user and LB.
5. LB forwards traffic (over HTTPS) to **App Server 1** or **App Server 2** based on load-balancing algorithm.
6. Each application server:
   - Runs **Nginx Web Server** + **Application Server**.
   - Communicates with **MySQL Database** (Primary-Replica setup) after passing **Firewall #2** (DB firewall).
7. **Monitoring Clients** on each server send metrics and logs to a monitoring service (e.g., Sumo Logic).
8. Data is returned to the LB → passes through **Firewall #3** (host-based firewall) → user.

---

## Why each additional element is added

- **3 Firewalls**:  
  - **Firewall #1 (Perimeter)**: Blocks unauthorized external traffic.  
  - **Firewall #2 (Database)**: Restricts DB access to application servers only.  
  - **Firewall #3 (Host-based)**: Controls traffic in/out of individual servers.
- **SSL Certificate**: Encrypts traffic between users and servers to prevent data interception.
- **Monitoring Clients**: Collect performance data, logs, and security alerts for real-time insight.

---

## Purpose of Key Security & Monitoring Features

- **Firewalls**: Filter and block unauthorized access, mitigate attacks.
- **HTTPS (SSL)**: Secures data in transit, protects sensitive information from being read or modified.
- **Monitoring**: Detects failures, performance drops, and suspicious activities.
- **Data Collection Method**: Monitoring agents collect logs, metrics, and events, sending them securely to a central dashboard.
- **To Monitor Web Server QPS**:  
  - Enable Nginx `stub_status` or integrate with Prometheus exporters.  
  - Set up alerts in the monitoring service when QPS exceeds thresholds.

---

## Issues with This Infrastructure

1. **SSL Termination at the Load Balancer**:  
   - Traffic between LB and backend servers might be unencrypted, creating internal security risks.
2. **Only One Writable MySQL Server**:  
   - A failure in the Primary DB stops all writes, even if replicas are healthy.
3. **All Servers Have Same Components**:  
   - Increases resource waste and potential attack surface; also makes scaling database separately from app/web layers harder.
